{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Mjolnir",
    "comment": "Mjolnir language syntax",
    "scopeName": "source.mj",
    "fileTypes": [
        "mj"
    ],
    "patterns": [
        {
            "include": "#all"
        }
    ],
    "repository": {
        "all": {
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "include": "#module"
                },
                {
                    "include": "#import"
                },
                {
                    "include": "#extern"
                },
                {
                    "include": "#annotation"
                },
                {
                    "include": "#type-qualifier"
                },
                {
                    "include": "#number"
                },
                {
                    "include": "#constant"
                },
                {
                    "include": "#punctuation"
                },
                {
                    "include": "#keyword"
                },
                {
                    "include": "#unit"
                },
                {
                    "include": "#operator"
                },
                {
                    "include": "#type"
                },
                {
                    "include": "#string"
                },
                {
                    "include": "#function"
                },
                {
                    "include": "#variable"
                }
            ]
        },
        "annotation": {
            "begin": "@",
            "end": "(?:(?=`)|$)",
            "name": "punctuation.quoted.mj",
            "patterns": [
                {
                    "match": "\\(.*\\)",
                    "name": "punctuation.section.mj"
                }
            ]
        },
        "comment": {
            "patterns": [
                {
                    "begin": "/// ```",
                    "end": "/// ```",
                    "name": "comment.block.documentation.mj",
                    "patterns": [
                        {
                            "begin": "(?<=^ */// )",
                            "end": "$",
                            "name": "comment.block.documentation.mj",
                            "patterns": [
                                {
                                    "include": "#all"
                                }
                            ]
                        }
                    ]
                },
                {
                    "begin": "///",
                    "end": "$",
                    "name": "comment.block.documentation.mj",
                    "patterns": [
                        {
                            "begin": "`",
                            "end": "`|$",
                            "name": "comment.block.documentation.mj",
                            "patterns": [
                                {
                                    "include": "#all"
                                }
                            ]
                        },
                        {
                            "match": "(?<=/// )(?:BUG|FIXME|NOTE|TODO|XXX):?",
                            "name": "markup.bold.mj"
                        },
                        {
                            "match": "(?<=/// #+) .*$",
                            "name": "markup.heading.mj"
                        }
                    ]
                },
                {
                    "begin": "//",
                    "end": "$",
                    "name": "comment.line.double-slash.mj",
                    "patterns": [
                        {
                            "begin": "`",
                            "end": "`|$",
                            "name": "comment.block.documentation.mj",
                            "patterns": [
                                {
                                    "include": "#all"
                                }
                            ]
                        },
                        {
                            "match": "(?<=// )(?:BUG|FIXME|NOTE|TODO|XXX):?",
                            "name": "markup.bold.mj"
                        }
                    ]
                }
            ]
        },
        "constant": {
            "match": "\\b(?:false|null|true|[0-9_]*[A-Z][A-Z0-9_]+)\\b",
            "name": "constant.language.mj"
        },
        "extern": {
            "begin": "\\b(extern)\\s*(\"C\")\\s*({)",
            "end": "}",
            "beginCaptures": {
                "1": {
                    "name": "keyword.control.mj"
                },
                "2": {
                    "name": "string.quoted.double.mj"
                },
                "3": {
                    "name": "punctuation.section.mj"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "punctuation.section.mj"
                }
            },
            "name": "meta.embedded.block.c",
            "patterns": [
                {
                    "include": "source.c"
                }
            ]
        },
        "function": {
            "patterns": [
                {
                    "match": "\\b[0-9_]*[a-z][a-z0-9_]*(?=\\()",
                    "name": "keyword.operator.mj"
                },
                {
                    "begin": "\\b([0-9_]*[a-z][a-z0-9_]*)(<)",
                    "end": "(>\\()",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.operator.mj"
                        },
                        "2": {
                            "name": "punctuation.section.mj"
                        }
                    },
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.section.mj"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#all"
                        }
                    ]
                }
            ]
        },
        "import": {
            "begin": "^\\s*(import)\\s+(?=[A-Za-z0-9_])",
            "end": "$",
            "beginCaptures": {
                "1": {
                    "name": "keyword.control.mj"
                }
            },
            "patterns": [
                {
                    "match": "\\b[A-Za-z0-9_][A-Za-z0-9_.+-]+",
                    "name": "punctuation.quoted.mj"
                },
                {
                    "match": "::",
                    "name": "punctuation.separator.mj"
                }
            ]
        },
        "keyword": {
            "patterns": [
                {
                    "match": "\\b(?:bitfield|enum|impl|type|variant|where)(?=<)",
                    "name": "keyword.control.mj"
                },
                {
                    "match": "\\b(?:class|else|embed|interface|struct|type|union)(?=\\s+[{A-Za-z0-9_])",
                    "name": "keyword.control.mj"
                },
                {
                    "match": "\\b(asm|catch|do|try)(?=\\s+{)",
                    "name": "keyword.control.mj"
                },
                {
                    "match": "\\b(catch|for|if|match|try|until|while)(?=\\s+\\()",
                    "name": "keyword.control.mj"
                },
                {
                    "match": "\\b(as|break|continue|fail|in|is|return|yield)\\b",
                    "name": "keyword.control.mj"
                }
            ]
        },
        "module": {
            "match": "\\b[A-Za-z0-9_][A-Za-z0-9_.+-]+(?=::)",
            "name": "entity.name.type.mj",
            "patterns": [
                {
                    "match": ".*",
                    "name": "punctuation.definition.variable.mj"
                }
            ]
        },
        "number": {
            "patterns": [
                {
                    "match": "\\b\\d+(?:\\.\\d+)?(?:([Ee])[+-]?\\d+)?(f(?:16|32|64|80|128)?|[iu](?:8|16|32|64|128)?|x)?\\b(\\s+(?:[A-Za-zµΩ°'\"]|\\^g|1/)[A-Za-z0-9⁰¹²³⁴⁵⁶⁷⁸⁹⁻⸍µΩ°'\"·^*/-]*)?",
                    "name": "constant.numeric.mj",
                    "captures": {
                        "1": {
                            "name": "punctuation.separator.mj"
                        },
                        "2": {
                            "name": "punctuation.separator.mj"
                        },
                        "3": {
                            "name": "storage.modifier.mj"
                        }
                    }
                },
                {
                    "match": "\\b(0x)[0-9A-Fa-f']+(?:\\.\\h+)?(?:([Pp])[+-]\\d+)?(f(?:16|32|64|80|128)?|[iu](?:8|16|32|64|128)?|x)?\\b(\\s+(?:[A-Za-zµΩ°'\"]|\\^g|1/)[A-Za-z0-9⁰¹²³⁴⁵⁶⁷⁸⁹⁻⸍µΩ°'\"·^*/-]*)?",
                    "name": "constant.numeric.mj",
                    "captures": {
                        "1": {
                            "name": "punctuation.separator.mj"
                        },
                        "2": {
                            "name": "punctuation.separator.mj"
                        },
                        "3": {
                            "name": "punctuation.separator.mj"
                        },
                        "4": {
                            "name": "storage.modifier.mj"
                        }
                    }
                },
                {
                    "match": "\\b(0o)[0-7']+(f(?:16|32|64|80|128)?|[iu](?:8|16|32|64|128)?|x)?\\b(\\s+(?:[A-Za-zµΩ°'\"]|\\^g|1/)[A-Za-z0-9⁰¹²³⁴⁵⁶⁷⁸⁹⁻⸍µΩ°'\"·^*/-]*)?",
                    "name": "constant.numeric.mj",
                    "captures": {
                        "1": {
                            "name": "punctuation.separator.mj"
                        },
                        "2": {
                            "name": "punctuation.separator.mj"
                        },
                        "3": {
                            "name": "storage.modifier.mj"
                        }
                    }
                },
                {
                    "match": "\\b(0b)[01']+(f(?:16|32|64|80|128)?|[iu](?:8|16|32|64|128)?|x)?\\b(\\s+(?:[A-Za-zµΩ°'\"]|\\^g|1/)[A-Za-z0-9⁰¹²³⁴⁵⁶⁷⁸⁹⁻⸍µΩ°'\"·^*/-]*)?",
                    "name": "constant.numeric.mj",
                    "captures": {
                        "1": {
                            "name": "punctuation.separator.mj"
                        },
                        "2": {
                            "name": "punctuation.separator.mj"
                        },
                        "3": {
                            "name": "storage.modifier.mj"
                        }
                    }
                },
                {
                    "match": "\\b0[A-Za-z0-9']+(f(?:16|32|64|80|128)?[iu](?:8|16|32|64|128)?|x)?\\b(\\s+(?:[A-Za-zµΩ°'\"]|\\^g|1/)[A-Za-z0-9⁰¹²³⁴⁵⁶⁷⁸⁹⁻⸍µΩ°'\"·^*/-]*)?",
                    "name": "invalid.illegal.mj",
                    "captures": {
                        "1": {
                            "name": "punctuation.separator.mj"
                        },
                        "2": {
                            "name": "storage.modifier.mj"
                        }
                    }
                }
            ]
        },
        "operator": {
            "patterns": [
                {
                    "match": "!(?!=)|&&|\\|\\||\\^\\^",
                    "name": "keyword.operator.logical.mj"
                },
                {
                    "match": "[+\\-*/%~&^|?:]|=>?|<=>|[<>!]=|(?<=[ {])[<>]|\\b(?:size|offset|align)of(?=\\()\\b",
                    "name": "keyword.operator.mj"
                }
            ]
        },
        "punctuation": {
            "patterns": [
                {
                    "match": ";",
                    "name": "punctuation.terminator.mj"
                },
                {
                    "match": "[,.]|->|::",
                    "name": "punctuation.separator.mj"
                },
                {
                    "match": "[()\\[\\]{}]",
                    "name": "punctuation.section.mj"
                },
                {
                    "begin": "(?<! )(<)",
                    "end": "(>)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.section.mj"
                        }
                    },
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.section.mj"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#all"
                        }
                    ]
                }
            ]
        },
        "string": {
            "patterns": [
                {
                    "begin": "'",
                    "end": "'",
                    "name": "string.quoted.single.mj"
                },
                {
                    "begin": "\"",
                    "end": "\"",
                    "name": "string.quoted.double.mj",
                    "patterns": [
                        {
                            "match": "\\\\(?:[\"0nrt\\\\]|x\\h\\h|u\\h\\h\\h\\h)",
                            "name": "constant.character.escape.mj"
                        },
                        {
                            "match": "\\\\(?:x\\h*|u\\h*|.)",
                            "name": "invalid.illegal.mj"
                        }
                    ]
                }
            ]
        },
        "type": {
            "begin": "\\b([iu](?:8|16|32|64|128)|f(?:16|32|64|80|128)|bool|void|[A-Z]|[A-Z0-9][A-Z0-9.+-]*[a-z][A-Za-z0-9.+-]*)\\b('(?:[A-Za-zµΩ°'\"]|\\^g|1/)[A-Za-z0-9⁰¹²³⁴⁵⁶⁷⁸⁹⁻⸍µΩ°'\"·^*/-]*)?",
            "end": "(?!(?:\\s*[\\[<&*^?]|\\((?:\\b([iu](?:8|16|32|64|128)|f(?:16|32|64|80|128)|bool|void|[A-Z]|[A-Z0-9][A-Z0-9.+-]*[a-z][A-Za-z0-9.+-]*|const|mutable|safe|volatile)\\b)))",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.type.mj"
                },
                "2": {
                    "name": "storage.modifier.mj"
                }
            },
            "patterns": [
                {
                    "match": "\\?",
                    "name": "storage.modifier.mj"
                },
                {
                    "match": "[&*^]['\"]?(?:\\s*(?:const|mutable|safe|volatile)\\b)*",
                    "name": "storage.modifier.mj"
                },
                {
                    "begin": "\\[",
                    "end": "\\]",
                    "name": "punctuation.section.mj",
                    "patterns": [
                        {
                            "include": "#all"
                        }
                    ]
                },
                {
                    "begin": "\\(",
                    "end": "\\)",
                    "name": "punctuation.section.mj",
                    "patterns": [
                        {
                            "include": "#all"
                        }
                    ]
                },
                {
                    "begin": "<",
                    "end": ">",
                    "name": "punctuation.section.mj",
                    "patterns": [
                        {
                            "include": "#all"
                        }
                    ]
                }
            ]
        },
        "type-qualifier": {
            "match": "\\b(?:const|mutable|safe|volatile)\\b",
            "name": "storage.modifier.mj"
        },
        "unit": {
            "patterns": [
                {
                    "match": "\\b(unit)(?:(<)((?:[A-Za-zµΩ°'\"]|\\^g|1/)[A-Za-z0-9⁰¹²³⁴⁵⁶⁷⁸⁹⁻⸍µΩ°'\"·^*/-]*)(>))",
                    "captures": {
                        "1": {
                            "name": "keyword.control.mj"
                        },
                        "2": {
                            "name": "punctuation.section.mj"
                        },
                        "3": {
                            "name": "storage.modifier.mj"
                        },
                        "4": {
                            "name": "punctuation.section.mj"
                        }
                    }
                },
                {
                    "match": "\\b(unit)(?:\\s+((?:[A-Za-zµΩ°'\"]|\\^g|1/)[A-Za-z0-9⁰¹²³⁴⁵⁶⁷⁸⁹⁻⸍µΩ°'\"·^*/-]*))",
                    "captures": {
                        "1": {
                            "name": "keyword.control.mj"
                        },
                        "2": {
                            "name": "storage.modifier.mj"
                        }
                    }
                }
            ]
        },
        "dimension": {
            "patterns": [
                {
                    "match": "\\b(?:dimension)(?=<)",
                    "name": "keyword.control.mj"
                },
                {
                    "match": "\\b(?:dimension)(?=\\s+[{A-Za-z0-9_])",
                    "name": "keyword.control.mj"
                }
            ]
        },
        "variable": {
            "match": "\\b[0-9]*[a-z_][a-z0-9_]*\\b",
            "name": "variable.other.mj"
        }
    }
}
